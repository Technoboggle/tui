#!/bin/bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (GPL)
#	Created:	2014.04.24
#	Changed:	2015.01.07
	script_version=0.8
#	Description:	Set a value in an 'conf/ini' file
#
#	Variables
#
	RET_HELP=99
	TITLE="Save values to conf files"
	ME="${0##*/}"
	ME_DIR="${0/${0##/*/}}"
	help_text="
$ME ($script_version)
$TITLE
Usage: 		$ME [options] FILE VALUENAME [VALUE]
Examples:	$ME -l  /etc/default/grub 			| Prints a list of found variable-names
		$ME     /etc/default/grub GRUB_TIMEOUT 15	| Saves VALUENAME as passed (VALUENAME)
		$ME -ic /etc/default/grub grub_timeout 15	| Saves valuename as VALUENAME
		$ME -i  /etc/default/grub grub_timeout 15	| Saves valuename as passed (valuename)
		$ME -is /etc/default/grub GRUB_TIMEOUT 15	| Saves VALUENAME as valuename
		
Where options are:
	-h		This screen
	-i		Internal search pattern is no longer case sensitive
	-l		Lists values vailabel in the file
	-c		Writes the VALUE, and stores VALUENAME in capital chars
	-s		Writes the VALUE, and stores VALUENAME in lower chars
"
	OPT=""
	VALUE=""
	CONFFILE=""
	VARNAME=""
	CAPS=false
	SMALL=false
	hadDollar=false
	SD=","
	source /etc/tui/commands.conf
#
#	Catching Arguments
#
	[[ -z "$2" ]] && printf "$help_text" && exit 1
	while getopts "icslh" name
	do 	case $name in
		c)	CAPS=true
			SMALL=false
			;;
		s)	SMALL=true
			CAPS=false
			;;
		i)	OPT="-i"
			;;
		l)	$GREP -v ^# "$2"|$GREP "="|$SED s,"="," ",g|$AWK '{print $1}'
			exit 0
			;;
		h)	printf "$help_text"
			exit $RET_HELP
			;;
		esac
	done
	shift $(($OPTIND - 1))
	CONFFILE="$1"
	VARNAME="$2"
	VALUE="$3"
	
	# Exit if it does not exist
	if [[ ! -f "$CONFFILE" ]]
	then	tui-status 1 "$CONFFILE does not exist!"
		exit $?
	fi
#
# 	Preformat strings
#
	SEARCH="$( echo $($GREP $OPT ^[[:space:]]${VARNAME}= "$CONFFILE"|$GREP -v ^#))" #|tr -d [:space:])"
	
	# Apply options
	$SMALL && VARNAME="${VARNAME,,}"
	$CAPS  && VARNAME="${VARNAME^^}"
	
	# Check for quotes
	printf  "$VALUE"|$GREP -q " " && \
		REPLACE="$VARNAME=\"$VALUE\"" || \
		REPLACE="$VARNAME=$VALUE"
	
	# Set proper SED 'divider'
	if echo "$SEARCH$REPLACE"|$GREP -q "$SD"
	then 	# Coma was found
		SD="/"
		printf "$REPLACE"|$GREP "$SD"|$GREP -q '\\' && SD="\\"	# backslash was found
		[[ ! "$SD" = "/" ]] && \
			printf "$REPLACE"|$GREP ","|$GREP "$SD"|$GREP -q "/" && SD="|"	# Forward slash was found
	fi
	
	# Troubles with VARIABLES due to chars that need to be escaped
	if echo "$REPLACE$SEARCH" | $GREP  -q '[%$+\@/]'
	then	hadDollar=true
		#REPLACE=$(echo "$REPLACE"|$SED 's|[%$/\|\@]|\\&|g')
		#SEARCH=$(echo "$SEARCH"|$SED 's|[%"$/\|\@]|\\&|g')
	fi
#
#	Display & Action
#
	Q="-q"
	set -x ; Q=""
	
	# Generate the command
	cmd="$SED s${SD}\"${SEARCH}\"${SD}\"${REPLACE}\"${SD}g -i \"$CONFFILE\""
	#printf "\n\n\n\t\t$cmd\n\n\n\n"
	
	# Save changes
	if ! $GREP $Q "$VARNAME" "$CONFFILE"
	then	# Its not there yet, just append it
		$hadDollar && \
			printf "$(eval $REPLACE)\n" >> "$CONFFILE" || \
			printf "${REPLACE}\n" >> "$CONFFILE"
	elif $hadDollar
	then	# Remove the escape chars while saving it.
		#echo "Its already in the file"
		eval $cmd
		#$cmd
	else	#printf "\n\n\n\t\t$cmd\n\n\n\n"
		$cmd
	fi
	
	# Return true if replaced string was found
	$GREP -q "$REPLACE" "$CONFFILE"
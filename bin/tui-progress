#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (GPL)
#	Created:	2014.04.26
#	Changed:	2015.01.15
	script_version=0.6
#	Description:	Simply displays a rotating line on the left side
#			The line rotates upon each call
#
#	Variables
#
	#source /etc/tui/status.conf
	source /etc/tui/tui.conf
	source /etc/tui/commands.conf
	TITLE="Progress indicator"
	ME="${0##*/}"
	ME_DIR="${0/${0##/*/}}"
	help_text="
$ME ($script_version)
$TITLE
Usage: 	$ME [options] [arguments]
Displays either / - \\ | within [     ] as progress string on the right side.

Where options are:
	-h(elp) 		This screen
	-b(ar)			Enables the 'bar' mode
	-B(ar)	        VAL     Changes the bar-symbol to VAL
	-m(ax)		VAL	If provided, changes progressstring output to 'calculated-num / VAL '
	-i(dent)	VAL	VAL is used as part of tempfile name tui-progress use, if used in multiple instances
				Should be provided if used with -m
	-r(eset)		Resets the tempfile, should be used before one is passing -
"
	ID_CUR=$$
	ID=default
	INDI=( '\' '|' '/' '-' )
	TOTAL=$[ ${#INDI[@]} -1 ]
	TYPE=dash
	MAX=1
	doReset=false
	BAR='#'
#
#	Catching Arguments
#
	while getopts "B:bi:m:rh" name
	do 	case $name in
		B)	BAR="$OPTARG"		;;
		b)	TYPE=bar		;;
		i)	ID=".$OPTARG"		;;
		m)	MAX="$OPTARG"
			[ dash = $TYPE ] && TYPE=num		;;
		h)	printf "$help_text"
			exit $RET_HELP		;;
		r)	doReset=true		;;
		esac
	done
	shift $(($OPTIND - 1))
	LEFT="$1"
	MIDDLE="$2"
	C=0
#
#	 Create initial tempfile if none exists
#
	TMPFILE="$TUI_TEMP_DIR/tui-progress$ID.tmp"
	[ ! -f "$TMPFILE" ] && \
		touch "$TMPFILE" && \
		printf 1 > "$TMPFILE"
	$doReset && printf 1 > "$TMPFILE" && exit 0
#
#	Check for all required options
#
	if ( [ bar = $TYPE ] && [ $MAX -gt 1 ] ) || [ dash = $TYPE ] 
	then echo "All good" > /dev/zero
	elif [ num = $TYPE ]
	then	echo "all good too" > /dev/zero
	else	tui-status 1 "Displaymode \"$TYPE\" requires '-m <NUM>'"
		exit $?
	fi
#
#	Read initial value from tmpfile
#
	[ -z $LEFT ] && LEFT=" " 
	[ -z $MIDDLE ] && MIDDLE=" "
	VAL=$(cat "$TMPFILE")
	PROGRESS=""
	case "$TYPE" in
		dash)	[ $VAL -gt 3 ] && VAL=0
			PROGRESS="[  ${INDI[$VAL]}   ]"	;;
		num)	PROGRESS="$VAL / $MAX"
			[ $VAL -gt $MAX ] && exit 1	;;
		bar)	set -x
			[ $VAL -gt $MAX ] && exit 1
			procent=0
			[ -z "$COLUMS" ] && COLUMNS=$(tput cols)
			procent=$(( 100 / $MAX * $VAL ))
			# The length that is available to print bars
			length=$(( $COLUMNS - (2 * ${#BORDER_LEFT}) - 2 - ${#LEFT} - ${#MIDDLE} - ${#procent} - 3  ))
			
			[ $procent -gt 100 ] && \
				procent=100
			
			len=$(( $length * $procent / 100  ))	# If its once at 0, its never comming up again, since bash is limited to integer math only.
			
			bars=$(printf '%*s' $len)
			bars=$(echo "$bars"|$SED s," ","\\$BAR",g)
			
			PROGRESS="\'$bars\'"
			PROGRESS+=" [ ${procent}%% ]"
			
			set +x
			;;
		*)	tui-status 1 "Error, type is $TYPE"	;;
	esac
	[ -z "$PROGRESS" ] && exit 1
#
#	Update value for next access
#
	case "$TYPE" in
	dash) 	[ ! $VAL -ge 3 ] && \
			( printf $(($VAL +1 )) > "$TMPFILE" ) || \
			printf 0 > "$TMPFILE"		;;
	num|bar)
		num=$(($VAL+1)) #; num=$VAL
		printf $num > "$TMPFILE"		;;
	esac
#
#	Display & Action
#
	[ -z $LEFT ] && LEFT=" " 
	[ -z $MIDDLE ] && MIDDLE=" "
	tui-printf "$LEFT" "$MIDDLE" "$PROGRESS"
	
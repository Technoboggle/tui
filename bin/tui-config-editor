#!/bin/bash
# ------------------------------------------------------------------------
#
# Copyright (c) 2014 by Simon Arjuna Erat (sea), erat.simon@gmail.com
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License (LGPL) as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License (LGPL) for more details.
#
# You should have received a copy of the GNU General Public License (LGPL)
# along with this program.  If not, see http://www.gnu.org/licenses/gpl.html
#
# ------------------------------------------------------------------------
#
#	File:		tui-config-editor
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (LGPL)
#	Created:	2014.11.03
#	Changed:	2014.11.03
	script_version=0.2
	TITLE="tui-config-editor"
#	Description:	Text TODO
#			...  TODO
#
#
#	Script Environment
#
	ME="${0##*/}"				# Basename of tui-config-editor
	ME="${ME/.sh/}"				# Cut off .sh extension
	LOG="$HOME/.config/tui/tui.log"		# Logfile
#
#	Variable defaults (options)
#
	beVerbose=false
#
#	Help text
#
#	TODO
#	Add your own options, be sure to add them to "getopts" handling too
#
	help_text="
$ME ($script_version)
${TITLE^}
Usage: 		$ME [options] [arguments]
Examples:	$ME 
		$ME /etc/tui/tui.conf
		
Where options are:
	-h(elp) 		This screen
	-L(og)			Show the log file ($LOG)

Files:
--------------------------------------
Script:		$ME
Log:		$LOG
"

	doLog() { # "MESSAGE STRING"
	# Prints: Time & "Message STRING"
	# See 'tui-log -h' for more info
		tui-log -t "$LOG" "$1"
	}




	ConfigMenu() { # CONFIG
	# Configures the variables/files used by the script
	#
	#	Check for config file
		CONFIG="$1"
		[[ ! -f "$CONFIG" ]] && \
			tui-echo "$CONFIG: Does not exist." "$TUI_FAIL" && \
			exit 1
		
		# Its only 1 file, preview
		for VAR in $(tui-value-get -l "$CONFIG");do 
			val="$(tui-value-get $CONFIG $VAR)"
			tui-echo "$VAR" "$val"
		done
		#grep -v ^"#" "$CONFIG" > "$tempfile"
		#oifs="$IFS" ; IFS="="
		#while read var val;do
		#[[ $# -gt 0 ]] && tui-echo "$var" "$val"
		#done<"$tempfile"
		#IFS="$oifs"
		tui-echo "Please select wich value to change:"
		select VAR in Back Edit $(tui-value-get -l "$CONFIG");do
			doSelect=false
			case $VAR in
			Back) 	setup_toggle=false
				break
				;;
			Edit)	tui-edit "$CONFIG"
				;;
			*)	VAL=$(tui-value-get "$CONFIG" "$VAR")
				[[ " " = "${VAL:0:1}" ]] && VAL="${VAL:1}"
				case "$VAL" in
				true|false)	doSelect=true
						selection="true false"
						;;
				on|off)		doSelect=true
						selection="on off"
						;;
				[0-9])		doSelect=true
						selection={0..9}
						;;
				esac
				tui-echo "Currently '$VAR' is set to '$VAL'."
				tui-yesno "Do you really want to change this?" || break
				
				if $doSelect
				then	tui-echo "Please select the new value:"
					select newval in $selection;do break;done
				else	newval=$(tui-read "Please type new value:")
				fi
				
				[[ ! -z "$newval" ]] && \
					msg="Changed \"$VAR\" from \"$VAL\" to \"$newval\"" && \
					tui-value-set "$CONFIG" "$VAL" "$newval"
				tui-status $? "$msg" && \
					doLog "Setup: $msg" || \
					doLog "Setup: Failed to c$(printf ${msg:1}|sed s,ged,ge,g)"
				;;
			esac
		done
	}
#
#	Catching Arguments
#
	while getopts "hL" opt
	do 	case $opt in
		h)	printf "$help_text"
			exit $RET_HELP
			;;
		L)	less "$LOG"	
			exit $RET_DONE
			;;
		# *)	printf "$help_text" ; exit $?	;;
		esac
		# Print $log_msg to $LOG and print $log_msg to user if verbosity is enabled
		#doLog "Options: $log_msg"
		#$beVerbose && tui-echo "$log_msg"
	done
	shift $(($OPTIND - 1))
	ARGS=("${*}")			# Remaining arguments
	ARGS_COUNT=${#ARGS[@]}		# Amount of remaining
#
#	Display & Action
#
	show_menu=true
	while $show_menu;do
		clear
		tui-header "$ME ($script_version)" "$(date +'%F %T')"
		tui-title "$TITLE"
		case $ARGS_COUNT in
		0)	printf "$help_text"
			exit $RET_HELP
			;;
		1)	ConfigMenu "$1"
		#tui-press
			;;
		*)	tui-echo "Please select the configuration to edit:"
			select config in "${ARGS[@]}";do
				ConfigMenu "$config"
			done
			;;
		esac
	done

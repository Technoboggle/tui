#!/usr/bin/env bash
# ------------------------------------------------------------------------
#
# Copyright (c) 2014-2015 by Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
#-----------------------------------------------
#
#
#	Variables
#
	ME=${0##*/}
	script_version=0.3
	beVerbose=false
#
#	Functions
#
	function showHelp() {
	# Shows the basic help screen
	#
		cat <<-EOF
			$ME ($script_version)
			Usage: $ME [options] [/path/to/]BASENAME.EXT [NEW_EXTENSION]
			
			Examples:	$ME input.txt
			 		2> input.txt exists, appending number.
			 		1> input.0.txt
			 		
			 		$ME input.txt html
			 		1> input.html

			If a NEW_EXTENSION is provided, it will be replacing EXT (if exists).
			If BASENAME with either the existing EXT or the NEW_EXTENSION already exists, a number will be inserted before the file its new/old EXT.
			If BASENAME has neither an old EXT nor a NEW_EXTENSION, the number will become its extension.
			The number will be increased until the generated filename does not exist yet.
			
			
		EOF
	}
	[ -z "$1" ] && showHelp && exit
#
# 	Arguments
#
	while getopts "hv" opt
	do	case "$opt" in
		h)	showHelp
			exit
			;;
		v)	beVerbose=true
			;;
		esac
	done
	shift $(($OPTIND - 1))
	set -x 
	#BASE="${1/.*/}"
	VAR=$(echo "$1") #|sed s,'\.',' ',g)
	ARGS=( $VAR )
	#BASE=""
	M=$(( ${#ARGS[@]} )) #- 1 ))
	C=0
	CUR=""
	while [ $C -lt $M ]
	do 	BASE+="$CUR"
		CUR="${ARGS[$C]} "
		C=$(( $C + 1 ))
	done
	echo $CUR
	BASE+="${CUR/.*}"
	[ "${BASE:0:(-1)}" = " " ] && BASE="${BASE:0:(-1)}"
	set +x 
	#BASE="${ARGS[${#ARGS[@]}]}"
	echo $BASE
	LOC=$(dirname "$BASE")
	EXT_OLD="${1/*./}"
	EXTENSION="$2"
#
#	Action & Display
#
	# Setting new extension
	[ -z "$EXTENSION" ] && \
		EXTENSION="$EXT_OLD"
	[ "$EXTENSION" = "$BASE" ] && \
		EXTENSION="" || \
		BASE=${BASE/.$EXT_OLD/}
	
	# Set init name check according to presets:
	[ -z "$EXTENSION" ] && \
		EXT="" || \
		EXT=".$EXTENSION"
	NAME_INIT="$BASE$EXT"
	
	if [ -f "$NAME_INIT" ]
	then	$beVerbose && \
			echo "$NAME_INIT exists, appending/increasing number." > /dev/stderr
		
		C=0		# Counter
		NAME_CHECK="$BASE.$C$EXT"
		
		while [ -f "$NAME_CHECK" ]
		do	C=$(( $C + 1 ))
			NAME_CHECK="$BASE.$C$EXT"
			$beVerbose && printf "\r%s" "Checking for $NAME_CHECK" > /dev/stderr
		done
		$beVerbose && [ $C -gt 0 ] && printf "\n" > /dev/stderr
		$beVerbose && echo "$NAME_CHECK is available" > /dev/stderr
		
		# Finaly a file that does not exist yet
		echo "$NAME_CHECK" > /dev/stdout
	else	# File does not exist, and can be used
		echo "$NAME_INIT" > /dev/stdout
	fi
exit 0
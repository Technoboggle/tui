#!/bin/bash
#
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (GPL)
#	Created:	2014.05.06
#	Changed:	2014.11.12
	script_version=1.2
#	Description:	Tool to configure TUI
#
#	Variables
#
	#[[ -z $FAIL ]] && source /etc/profile.d/tui.sh
	#alias tui-printf="/home/sea/.local/bin/tui-printf"
	TUI_VERSION=0.5.8
	TITLE="Text User Inferface (TUI) - Configuration"
	ME=${0##*/}
	[[ 0 -eq $UID ]] && \
		export TUI_LOG="/var/log/tui.log" || \
		export TUI_LOG="$HOME/.config/tui/tui.log"
	for cfg in apps colors status tui;do source /etc/tui/$cfg.conf;done
#
#	Functions
#
	doLog() { # "MESSAGE STRING"
	# Prints: Time & "Message STRING"
	# See 'tui-log -h' for more info
		tui-log -t "$TUI_LOG" "$1"
	}
	ConfigTUI() { #
	#
	#
		MSG_MENU_title=""
		MSG_MENU_out=""
		MSG_MENU_next=""
		
		# Get the proper path
		if [[ 0 -eq $UID ]] 
		then 	thisconf=/etc/$ME/
			MSG_MENU_title="TUI config - System Wide"
		else	thisconf="$HOME/.config/tui/"
			MSG_MENU_title="TUI config - $USER personal"
		fi
		cd "$thisconf"
		
		# Show & Edit files
		tui-printf -T "$MSG_MENU_title"
		select ConfigSection in Quit Edit_All * ;do
			if [ ! "" = "$(printf $ConfigSection)" ];then
				[ Quit = $ConfigSection ] && exit 0
				[ Edit_All = $ConfigSection ] && tui-edit "$thisconf"/* && exit 0
				
				tui-printf -T "Change section: $ConfigSection (overview)"
				# Single file edit below
				CONFIGS=$(tui-conf-get -l "$ConfigSection")
				
				# Show content of the file
				for VAR in $CONFIGS;do
					cur=$(tui-conf-get "$ConfigSection" "$VAR")
					tui-printf -E "Setting '$VAR'"  "$cur"
				done
				
				# Change?
				MSG_next="Which variable to change in $ConfigSection?"
				select var2chg in Back $CONFIGS;do 
					[ Back = "$var2chg" ] && break
					cur=$(eval printf $(tui-conf-get "$ConfigSection" "$var2chg"))
					newval=$(tui-read "What is the new value of $var2chg ($cur):")
					MSG_out="$ConfigSection: Changed $var2chg to $newval"
					[[ -z "$newval" ]] || tui-conf-set "$ConfigSection" "$var2chg" "$newval"
					tui-status $? "$MSG_out" && \
						doLog "$MSG_out"
					tui-printf -T "$MSG_next"
				done
			fi
			tui-printf -T "$MSG"
		done
	}
	FirstUse() { #
	# Checks if the user configuration is present
	# Effectless as root user
		tmp="$HOME/.config/tui/"
		[[ ! -f "$tmp/user.conf" ]] && \
			mkdir -p "$tmp" && \
			cp -R /usr/share/tui/*conf  "$tmp"
	}
#
#	Action & Display
#
	if [ 0 -eq $UID ]
	then	USER_NAME=".: r o o t :."
	else	USER_NAME="$USER"
	fi
	if [[ 0 -ne $UID ]]
	then 	[[ -d "$HOME/.config/tui/" ]] || FirstUse
		for cfg in apps user;do source "$HOME/.config/tui/$cfg.conf";done
	fi
	help_text="
$ME ($script_version)
$TITLE
Usage: 	$ME [options] [config]
Where options are:
	-h		This screen
	config		Enters directly into config mode

"
#
#	Catching Arguments
#
	while getopts "h" name
	do 	case "$name" in
		h|help)
			printf "$help_text"
			exit $RET_HELP
			;;
		esac
	done
	shift $(($OPTIND - 1))
	if [[ "$1" = "config" ]]
	then 	ConfigTUI
		exit $?
	fi
	
	# /etc/tui/* & $HOME/.config/tui/* were read, TUI_THEME should be available
	# There is a copy in tui-printf... check before deletion
	if [[ ! -z "$TUI_THEME" ]] && [[ -f "/usr/share/tui/themes/$TUI_THEME" ]]
	then	source "/usr/share/tui/themes/$TUI_THEME"
		doLog "Using theme: $TUI_THEME"
		BORDER_RIGHT=""
		# from: http://rosettacode.org/wiki/Reverse_a_string#UNIX_Shell
		for((i=${#BORDER_LEFT}-1;i>=0;i--)); do BORDER_RIGHT="$BORDER_RIGHT${BORDER_LEFT:$i:1}"; done
		#BORDER_LEFT BORDER_RIGHT
		HEAD_BG="$TUI_BACKGROUND"
		HEAD_FG="$TUI_FOREGROUND"
		TITLE_BG="$TUI_FONT_INVERT$TUI_BACKGROUND"
		TITLE_FG="$TUI_FONT_INVERT$TUI_FOREGROUND"
	else	# No theme found, use the defaults
		BORDER_LEFT="# |"
		BORDER_RIGHT="| #"
		
		TITLE_BG="$TUI_COLOR_BG_WHITE"
		TITLE_FG="$TUI_COLOR_FG_BLUE"
		HEAD_BG="$TUI_COLOR_BG_BLUE"
		HEAD_FG="$TUI_COLOR_FG_WHITE"
	fi
#
#	Display & Action
#
	if [[ "$ME" = tui ]]
	then	# Its not sourced, thus show info & config menu
		tui-printf -H "TUI ($TUI_VERSION) by sea" "$(date +%F) $(date +%T)"
		tui-printf -T "$TITLE ($script_version)"
		tui-printf -E "Calling $ME like this gives you an impression how it may look like."
		tui-printf -E
		tui-printf -E "If you are looking for the commands of TUI, try this:" "tui-<hit-tab>"
		tui-printf -E "Also you could read:" "the man pages or /usr/share/tui/README"
		tui-printf -E "Also there is a sample script:" "/usr/share/tui/sample"
		tui-printf -E "To create a new script in ~/bin or ~/.local/bin, type:" "tui-new-script SCRIPTNAME"
		tui-printf -E
		tui-yesno "Configure it now?" || exit 0
		ConfigTUI	
	fi

#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (GPL)
#	Created:	2014.05.06
#	Changed:	2015.01.23
	script_version=1.6.1
#	Description:	Tool to configure TUI
#
#	Variables
#
	TUI_VERSION=0.6.9
	TITLE="Text User Inferface (TUI) - Configuration"
	ME=${0##*/}
	[ 0 -eq "$UID" ] && \
		export TUI_LOG="/var/log/tui.log" || \
		export TUI_LOG="$HOME/.config/tui/tui.log"
	for cfg in apps colors commands status tui;do source /etc/tui/$cfg.conf;done
#
#	Functions
#
	doLog() { # "MESSAGE STRING"
	# Prints: Time & "Message STRING"
	# See 'tui-log -h' for more info
		tui-log -t "$TUI_LOG" "$1"
	}
	ConfigTUI() { #
	#
	#
		MSG_MENU_title=""
		MSG_MENU_out=""
		MSG_MENU_next=""
		
		# Get the proper path
		if [ 0 -eq "$UID" ] 
		then 	thisconf=/etc/$ME/
			MSG_MENU_title="TUI config - System Wide"
		else	thisconf="$HOME/.config/tui/"
			MSG_MENU_title="TUI config - $USER personal"
		fi
		cd "$thisconf"
		
		# Show & Edit files
		tui-conf-editor *conf
	}
	ResetTUI() { #
	#
	#
		case $UID in
		0)	# ROOT, system wide
			RANGE="System defaults"
			CFG_DIR=/etc/tui
			SRC_DIR=/usr/share/tui/conf.etc
			;;
		*)	# USER, personal only
			RANGE="Personal settings"
			CFG_DIR=$HOME/.config/tui
			SRC_DIR=/usr/share/tui
			;;
		esac
		
		[ -d "$CFG_DIR" ] || mkdir -p "$CFG_DIR"
		cd "$CFG_DIR"
		if [ $? -eq 0 ]  && $YES
		then	rm -fr *
		else	tui-yesno "Are you sure to remove $RANGE?" || return 1
			rm -fr *
		fi
		
		cd "$SRC_DIR"
		cp *conf "$CFG_DIR"
		return $?
	}
#
#	Action & Display
#
	#if [ 0 -eq $UID ]
	if [ root = $(whoami) ]
	then	USER_NAME=".: r o o t :."
		APPS=/etc/tui/apps.conf
		CONF=/etc/tui/tui.conf
	else	[ -d "$HOME/.config/tui/" ] || ( YES=true ; ResetTUI ) 
		for cfg in apps user;do source "$HOME/.config/tui/$cfg.conf";done
		APPS=$HOME/.config/tui/apps.conf
		CONF=$HOME/.config/tui/user.conf
		
	fi
	help_text="
$ME $TUI_VERSION (This script: $script_version)
$TITLE
Usage: 	$ME [config|reset[-yes]|theme] (source tui)
Where options are:
	-h		This screen
	config		Enters directly into config mode
	reset		Resets configuration to defaults, root will reset systemwide defaults
	reset-yes	Doesnt ask for verification
	theme [THEME]	If no THEME is passed, returns which is currently active, otherwise sets theme to THEME.
			As root, changes the root theme only.

"
#
#	Catching Arguments
#
	if [ "$ME" = tui ]
	then	while getopts "h" name
		do 	case "$name" in
			h|help)
				printf "$help_text"
				exit $RET_HELP
				;;
			esac
		done
		shift $(($OPTIND - 1))
	fi
	
	MODE="$1"
	YES=false
	case $MODE in
	config)
		ConfigTUI
		exit $?
		;;
	reset-yes)
		MODE=reset
		YES=true
		;;
	theme)	#set +x
		[ 0 -eq $UID ] && \
			ITEM=TUI_THEME_ROOT || \
			ITEM=TUI_THEME
		if [ -z "$2" ]
		then	#ls /usr/share/tui/themes
			tui-echo "$ITEM is set to:" "$(tui-conf-get $CONF $ITEM)"
			exit $?
		else	#sh -x /home/sea/prjs/tui/bin/
			tui-conf-set $CONF $ITEM $2
			tui-status $? "Changed $ITEM in $CONF to $2"
			exit $?
		fi
		;;
	esac
	
	if [ "$MODE" = "reset" ]
	then	ResetTUI
		# $RANGE should be set within the function 'ResetTUI'
		tui-status $? "Reset $RANGE"
		exit $?
	fi
#
#	Display & Action
#
	if [ "$ME" = tui ]
	then	# Its not sourced, thus show info & config menu
		tui-printf -H "TUI ($TUI_VERSION) by sea" "$USER_NAME @ $(date +%F) $(date +%T)"
		tui-printf -T "$TITLE ($script_version)"
		tui-printf -E "Calling $ME like this gives you an impression how it may look like."
		tui-printf -E
		tui-printf -E "If you are looking for the commands of TUI, try this:" "tui-<hit-tab>"
		tui-printf -E "If you are a developer, i highly recomand to read:" "man tui"
		#tui-printf -E "Also you could read:" "the man pages or /usr/share/doc/tui/README.md"
		tui-printf -E "There are some sample scripts to get you started:" "/usr/share/doc/tui/samples"
		tui-printf -E "To create a new script in ~/bin or ~/.local/bin, type:" "tui-new-script SCRIPTNAME"
		tui-printf -E
		tui-yesno "Configure it now?" || exit 0
		ConfigTUI	
	fi

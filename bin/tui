#!/bin/bash
#
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (GPL)
#	Created:	2014.05.06
#	Changed:	2014.12.03
	script_version=1.5
#	Description:	Tool to configure TUI
#
#	Variables
#
	TUI_VERSION=0.6.3
	TITLE="Text User Inferface (TUI) - Configuration"
	ME=${0##*/}
	[[ 0 -eq $UID ]] && \
		export TUI_LOG="/var/log/tui.log" || \
		export TUI_LOG="$HOME/.config/tui/tui.log"
	for cfg in apps colors status tui;do source /etc/tui/$cfg.conf;done
#
#	Functions
#
	doLog() { # "MESSAGE STRING"
	# Prints: Time & "Message STRING"
	# See 'tui-log -h' for more info
		tui-log -t "$TUI_LOG" "$1"
	}
	ConfigTUI() { #
	#
	#
		MSG_MENU_title=""
		MSG_MENU_out=""
		MSG_MENU_next=""
		
		# Get the proper path
		if [[ 0 -eq $UID ]] 
		then 	thisconf=/etc/$ME/
			MSG_MENU_title="TUI config - System Wide"
		else	thisconf="$HOME/.config/tui/"
			MSG_MENU_title="TUI config - $USER personal"
		fi
		cd "$thisconf"
		
		# Show & Edit files
		tui-conf-editor *conf
	}
	ResetTUI() { #
	#
	#
		case $UID in
		0)	# ROOT, system wide
			RANGE="System defaults"
			CFG_DIR=/etc/tui
			SRC_DIR=/usr/share/tui/conf.etc
			;;
		*)	# USER, personal only
			RANGE="Personal settings"
			CFG_DIR=$HOME/.config/tui
			SRC_DIR=/usr/share/tui
			;;
		esac
		
		[[ -d "$CFG_DIR" ]] || mkdir -p "$CFG_DIR"
		cd "$CFG_DIR"
		if [[ $? -eq 0 ]]  && $YES
		then	rm -fr *
		else	tui-yesno "Are you sure to remove $RANGE?" || return 1
			rm -fr *
		fi
		
		cd "$SRC_DIR"
		cp *conf "$CFG_DIR"
		return $?
	}
#
#	Action & Display
#
	#if [ 0 -eq $UID ]
	if [[ root = $(whoami) ]]
	then	USER_NAME=".: r o o t :."
	else	[[ -d "$HOME/.config/tui/" ]] || ( YES=true ; ResetTUI ) 
		for cfg in apps user;do source "$HOME/.config/tui/$cfg.conf";done
	fi
	help_text="
$ME ($script_version)
$TITLE
Usage: 	$ME [options] [config]
Where options are:
	-h		This screen
	config		Enters directly into config mode
	reset		Resets configuration to defaults, root will reset systemwide defaults
	reset-yes	Doesnt ask for verification

"
#
#	Catching Arguments
#
	if [[ "$ME" = tui ]]
	then	while getopts "h" name
		do 	case "$name" in
			h|help)
				printf "$help_text"
				exit $RET_HELP
				;;
			esac
		done
		shift $(($OPTIND - 1))
	fi
	
	MODE=$1
	YES=false
	if [[ "$MODE" = "config" ]]
	then 	ConfigTUI
		exit $?
	elif [[ "$MODE" = "reset-yes" ]]
	then	MODE=reset
		YES=true
	fi
	
	if [[ "$MODE" = "reset" ]]
	then	ResetTUI
		tui-status $? "Reset $RANGE"
		exit
	fi
#
#	Display & Action
#
	if [[ "$ME" = tui ]]
	then	# Its not sourced, thus show info & config menu
		tui-printf -H "TUI ($TUI_VERSION) by sea" "$USER_NAME @ $(date +%F) $(date +%T)"
		tui-printf -T "$TITLE ($script_version)"
		tui-printf -E "Calling $ME like this gives you an impression how it may look like."
		tui-printf -E
		tui-printf -E "If you are looking for the commands of TUI, try this:" "tui-<hit-tab>"
		tui-printf -E "If you are a developer, i highly recomand to read:" "man tui"
		#tui-printf -E "Also you could read:" "the man pages or /usr/share/doc/tui/README.md"
		tui-printf -E "There are some sample scripts to get you started:" "/usr/share/doc/tui/samples"
		tui-printf -E "To create a new script in ~/bin or ~/.local/bin, type:" "tui-new-script SCRIPTNAME"
		tui-printf -E
		tui-yesno "Configure it now?" || exit 0
		ConfigTUI	
	fi

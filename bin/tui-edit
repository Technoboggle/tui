#!/bin/bash
#
# Copyright (c) 2014 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Variable defaults
#
	script_version=1.0
	ME="$(basename $0)"
	ARGS=($@)
#
#	Check for the environment to load
#
	source /etc/tui/apps.conf
	[[ 0 -eq $UID ]] || \
		CONF="$HOME/.config/tui/apps.conf"
	[[ -f "$CONF" ]] && source "$CONF"
	
	help_text="$ME ($script_version)
		\rUsage: $ME [options] [/path/to/]FILE [../]FILE2 ...
		\rOpens provided FILE/s in the favorite editor according to environment.
		\rIn VT it will open \"$EDITOR_CLI\" and in GUI it will open \"$EDITOR_GUI\"
		\r"
#
#	Variable handling
#
	[ -z "$1" ] && echo -e "$help_text" && exit $RET_HELP
	case "$1" in
	"-h")	echo -e "$help_text" ; exit $RET_HELP
		;;
	esac
#
#	Functions
#
	GetAvailableApp() { # gui|cli
	# Returns the first found editor for either GUI or CLI
	#
		[[ -z "$1" ]] && echo "GetAvailableEditor requires: gui or cli" && return 1
		
		case $1 in
		cli)	LIST="vim nano vi emacs"	;;
		gui)	LIST="notepadqq emacs code-editor brackets geany pluma gedit leafpad kedit"	;;
		esac
		
		for L in $LIST;do
			which $L 2>/dev/zero && \
				echo "$L" && \
				return 0
		done
		return 1
	}
#
#	Display
#
	if [[ xterm = "$TERM" ]] || [[ ! "" = "$DESKTOP_SESSION" ]] || [[ ! "" = "$XDG_CURRENT_DESKTOP" ]]
	then	MODE=gui
	else	MODE=cli
	fi
	
	if [[ -z "$EDITOR" ]]
	then	case $MODE in
		cli)	export EDITOR=$(which $EDITOR_CLI 2>/dev/zero)
			;;
		gui)	export EDITOR=$(which $EDITOR_GUI 2>/dev/zero)
			;;
		esac
	fi
	# Failsafe check, use first available editor found if set EDITOR was not found
	if ! which $EDITOR > /dev/zero
	then 	# The EDITOR is not available, search for default
	EDITOR=$(GetAvailableApp $MODE)
		[[ $MODE = cli ]] && \
			var=EDITOR_CLI || \
			var=EDITOR_GUI
		[[ -z "$EDITOR" ]] && tui-echo "No editor could be found, please change \"$CONF\" manualy!" && exit 1
		tui-conf-set "$CONF" $var $EDITOR
		export EDITOR
	fi
	
	for A in "${ARGS[@]}";do
		$EDITOR "$A"
	done

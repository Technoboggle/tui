#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Variable defaults
#
	script_version=0.5
	ME="$(basename $0)"
	help_text="\r$ME ($script_version)
		\rUsage: $ME [options]
		\rSelect usb device if more than one is found
		\rWhere options are:
		\r\t-h\tThis screen
		\r\t-a\tAutoselect entry if only one was found
		\r"
	ARGS=(${@})
	ARGS_COUNT=$#
	targetusb=""
	devDisk=/dev/disk/by-id
	tDev=""
	AUTO=false		# Automaticly select only available option
#
#	Load own/users TUI configuration?
#
	source /etc/tui/commands.conf	# Like AWK, GREP, SED
	source /etc/tui/tui.conf
	source /etc/tui/apps.conf
	if [ root = $(whoami) ]
	then	CONF_APP=/etc/tui/apps.conf
	else	CONF_APP=$HOME/.config/tui/apps.conf
		[ -f "$CONF_APP" ] && source "$CONF_APP"
	fi
#
#	Variable handling
#
	#[ -z $1 ] && echo -e "$help_text" && exit $RET_HELP
	while getopts h opt
	do	case "$opt" in
		h)	echo -e "$help_text"
			exit $RET_HELP
			;;
		a)	AUTO=true
			;;
	esac
	done
	shift $(($OPTIND -1))
#
#	Functions
#
	getspace() { # NUM
	# Returns string of NUM space chars
	#
		C=0 ; out=""
		while [ $C -lt $1 ];do out+=" ";let C++;done
		printf "$out"
	}
#
#	Display
#
	# Prepare selection
	
	list="$(ls $devDisk|$GREP usb|$GREP -v part)"
	left="$BORDER_LEFT Please connect an USB device..."
			
	# Make sure there is something available
	while [ "" = "$list" ] ; do
		right="[  $(tui-indi) ] $BORDER_RIGHT"
		printf "\r"
		read -t 1 -p "$left$(getspace $[ $COLUMNS - ${#left} - ${#right} ] )$right"  buffer
		printf "\lf"
		list="$(ls $devDisk|$GREP usb|$GREP -v part[0-9])"
	done

	# Is there more than 1 entry?
	if [ ! "$list" = "$(echo $list)" ]
	then	# yes, more than one
		targetUsb=$(tui-select $list) # ; do break; done
	else	# Just this one
		# Check if only item should be reported without interaction.
		usbAsk=$(tui-conf-get $CONF_APP usbAsk)
		if [ -z "$usbAsk" ]
		then	# There is no setting yet
			tui-echo "The only device available is:" "$list"
			tui-yesno "Does this refer to a pluged in storage device?" && \
				tui-conf-set $CONF_APP usbAsk false || \
				tui-conf-set $CONF_APP usbAsk true
			source $CONF_APP
		fi

		$AUTO && usbAsk=false
		if $usbAsk
		then	# Select
			tui-select $list 
				## targetUsb in $list;do break;done
			exit 0
		else	# Auto-return
			targetUsb=$(echo $list)
		fi
		
	fi
	tDev=$(readlink -f $devDisk/$targetUsb)
	echo $tDev

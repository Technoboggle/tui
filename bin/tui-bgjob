#!/bin/bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Author: 	Simon A. Erat (sea)
#	Contact:	erat.simon@gmail.com
#
#	Variable defaults
#
	script_version=0.6.2
	source /etc/tui/commands.conf	# Like AWK, GREP, SED
	ME="$(basename $0)"
	[[ -z $TUI_TEMP_FILE ]] && source /etc/tui/tui.conf
	help_text="\r$ME ($script_version)
		\rUsage: $ME [-f OUTFILE] SCRIPTFILE  \"Progress String\"  \"Exit String\"  [ WAIT ]
		\rNOTE:\t'Progress String' may contain shell escaped commands.
		\r
		\r\t-f /path/to/file\tPrint the filesize of passed file
		\r
		\rExecutes SCRIPTFILE and prints 'Progress String' while running.
		\rPrints 'Exit String' when done, regardless of exit code (0,1,?).
		\rWAIT is optinal wait time between updates, default is 0.7 (seconds).
		\r"
	CHECKFILE=false
#
#	Variable handling
#
	[[ -z $3 ]] && printf "$help_text" && exit $RET_HELP
	BG_RET="-1"
	while getopts "hf:" opt
	do 	case $opt in
		h)	printf "$help_text"
			exit $RET_HELP
			;;
		f)	FILECHECK="$OPTARG"
			CHECKFILE=true
			;;
		esac
	done
	shift $(($OPTIND - 1))
	
	JOB="$1"
	TXT_PROGRESS="$2"
	TXT_EXIT="$3"
	[[ -z $4 ]] && WAIT=0.7 || WAIT=$4
#
#	Send job to bg and get pid
#
	(sh "$JOB" && printf 0 > /dev/stdout > $TUI_TEMP_FILE || \
			printf 1 > /dev/stdout > $TUI_TEMP_FILE
	)   & PID=$!
#
#	While the job is running...
#
	tui-printf -rS 2 "Starting job..." #"$TUI_WORK"
	sleep 2
	while ps |$GREP -q $PID
	do
		if [[ true = $CHECKFILE ]]
		then 	FS=$(ls -lh "$FILECHECK"|$$AWK '{print $5}')
			tui-printf "$TXT_PROGRESS" "( $FS )"  "[  $(tui-indi)   ]" 2>&1
		else	tui-printf "$TXT_PROGRESS" "[  $(tui-indi)   ]" 2>&1
		fi
		sleep $WAIT
	done
#
#	Report Return Code of ended bg-job
#
	BG_RET=$(cat $TUI_TEMP_FILE)
	if [[ "$BG_RET" = "-1" ]]
	then	tui-echo "$TXT_EXIT" "Could not retrieve returnvalue" "$INFO"
		exit $RET_INFO
	else	tui-status $BG_RET "$TXT_EXIT"
		exit $?
	fi
